命名規則<特殊な例外あり>

マクロ定数, enum				->CONSTANT_CASE
クラス, 関数, enum class		->UpperCamelCase
変数									->camelCase

//先頭
private変数							->m_
global変数							->g_
const定数							->c

//コメント
変数, オペレーター, クラス	->一行上に//コメント
関数									->上の行に//----------------------------------------------------------------------------------, [関数名], 
												関数の説明, throwがある場合throwの説明(throw: ~~\n), worningを出す場合worningの説明(worning: ~~\n), void以外なら返り値の説明(return: ~~\n), 引数の説明(1: ~~\n, 2: ~~\n)

//throwテキスト
header								->L"Error!! クラス名->関数名"
text									->L"エラー内容"
code									->HRESULT等がある場合

//例外
・stdクラスを継承したクラスは、直下のメンバは全てstdの命名規則を継承する。メンバのメンバなどはその限りではない
・Detailの付くネームスペースは他の処理の細かなパーツメソッドを格納する。使用する場合はDetail->使用するクラス名の順にnamespaceを入れ子にする
・Detailの付くネームスペース内のメソッドは制作者のみが参照すればよい場所とし、コメントの大幅な省略(あくまで省略)してもよい