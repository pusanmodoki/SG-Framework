SG-Framework コード規約

01-ヘッダーコメント
/*----------------------------------------------------------------------------------
S.Game-Framework  (SG-Framework)
The MIT License (MIT)

Copyright (c) 2020 Shota Uemura

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
copies of the Software, and to permit persons to whom the Software is 
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in 
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN 
THE SOFTWARE.
------------------------------------------------------------------------------------*/
/** 
* @file FileName
*  @brief Summary
*/


02-ヘッダーマクロ
#ifndef SGFRAMEWORK_HEADER_NAME_HPP_
#define SGFRAMEWORK_HEADER_NAME_HPP_
#endif // !SGFRAMEWORK_HEADER_NAME_HPP_


03-関数コメント
//----------------------------------------------------------------------------------
//! @brief Summary
//! @param[in] argumentName Summary(copy argument)
//! @param[out] argumentName Summary(reference argument)
//! @param[in, out] argumentName Summary(reference argument)
//! @return ReturnType Summary
//! @throw Summary(std関数が非noexceptだが記載がない等で判断できない場合: possibly. noexceptな場合: noexcept.)
//! @attention 注意(template等)

04-プロパティコメント
//! @brief_property_get Summary
//! @brief_property_set Summary
//! @throw Summary(std関数が非noexceptだが記載がない等で判断できない場合: possibly. noexceptな場合: noexcept.)
//! @fellow_property Function()


05-名前空間, クラス, マクロ. enumコメント
//! @brief Summary


06-メンバ変数コメント
int val; //! @brief Summary
//! @brief Summary
int val; 



//<property, static, virtual, possibly throw, noexcept> summary(return value or set value)